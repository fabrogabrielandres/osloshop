generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
}

enum Gender {
  men
  women
  kid
  unisex
}

enum Role {
  admin
  user
}

model Category {
  id      String    @id @default(uuid())
  name    String    @unique
  Product Product[]
}

model Product {
  id          String        @id @default(uuid())
  title       String
  description String
  inStock     Int
  price       Float         @default(0)
  sizes       Size[]        @default([])
  slug        String        @unique
  tags        String[]
  gender      Gender
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  String
  ProcutImage ProcutImage[]
  producStock ProducStock?

  @@index([gender])
}

// ProductStock

model ProducStock {
  id            String  @id @default(uuid())
  XS            Int     @default(0)
  S             Int     @default(0)
  M             Int     @default(0)
  L             Int     @default(0)
  XL            Int     @default(0)
  XXL           Int     @default(0)
  XXXL          Int     @default(0)
  product       Product @relation(fields: [producStockId], references: [id])
  producStockId String  @unique
}

// model ImagesProduct
model ProcutImage {
  id  Int    @id @default(autoincrement())
  url String

  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  role          Role      @default(user)
  image         String?

  AddressUser AddressUser?
}

model Countrys {
  id          String        @id
  name        String
  AddressUser AddressUser[]
}

model AddressUser {
  id          String  @id @default(uuid())
  firstName   String
  lastName    String
  address     String
  address2    String?
  postalCode  String
  city        String
  phoneNumber String

  // relations
  country   Countrys @relation(fields: [countryId], references: [id])
  countryId String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}
